---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-gpt-20b-inference
  labels:
    app: vllm-gpt-20b-inference
spec:
  replicas: 2
  selector:
    matchLabels:
      app: vllm-gpt-20b-inference
  template:
    metadata:
      labels:
        app: vllm-gpt-20b-inference
    spec:
      containers:
        - name: vllm-openai
          image: vllm/vllm-openai:gptoss
          resources:
            limits:
              nvidia.com/gpu: 1
            requests:
              cpu: "8"
              memory: 32Gi
              nvidia.com/gpu: 1
          command:
            - "python3"
            - "-m"
            - "vllm.entrypoints.openai.api_server"
            - "--model"
            - "openai/gpt-oss-20b"  # 或者使用挂载的本地路径/models/gpt-oss-20b
            - "--tensor-parallel-size"
            - "1"
            - "--host"
            - "0.0.0.0"
            - "--port"
            - "8001"
            - "--trust-remote-code"  # 可能需要信任远程代码
          ports:
            - containerPort: 8001
              name: http
          volumeMounts:
            - name: persistent-storage-s3
              mountPath: /models
              readOnly: true
            - name: huggingface-cache
              mountPath: /root/.cache/huggingface
            - name: shm
              mountPath: /dev/shm
          env:
            - name: HUGGING_FACE_HUB_TOKEN
              value: "TOKEN"  # 请替换为你的实际token
            - name: TRANSFORMERS_CACHE
              value: "/root/.cache/huggingface"
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
      volumes:
        - name: persistent-storage-s3
          persistentVolumeClaim:
            claimName: s3-claim
        - name: huggingface-cache
          hostPath:
            path: /opt/dlami/nvme/huggingface-cache
            type: DirectoryOrCreate
        - name: shm
          emptyDir:
            medium: Memory
            sizeLimit: 2Gi
      tolerations:
        - key: "nvidia.com/gpu"
          operator: "Exists"
          effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: vllm-gpt-20b-nlb
  annotations:
    # NLB specific annotations
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing" # internal internet-facing
spec:
  ports:
    - port: 8001
      protocol: TCP
      targetPort: http
  selector:
    app: vllm-gpt-20b-inference
  type: LoadBalancer
